//-- State: b1, b2, b3, b4, b5
//-- Inputs: i1, i2, i3, i4, i5

assume {
eq b1 r0.0() && eq b2 r0.0() && eq b3 r0.0() && eq b4 r0.0() && eq b5 r0.0();
eq (add (add (add (add i1 i2) i3) i4) i5) r1.0();
}

always guarantee {

([b1 <- r0.0()] && [b2 <- r0.0()] && [b3 <- add b3 i3] && [b4 <- add b4 i4] && [b5 <- add b5 i5]) || ([b2 <- r0.0()] && [b3 <- r0.0()] && [b4 <- add b4 i4] && [b5 <- add b5 i5] && [b1 <- add b1 i1]) || ([b3 <- r0.0()] && [b4 <- r0.0()] && [b5 <- add b5 i5] && [b1 <- add b1 i1] && [b2 <- add b2 i2]) || ([b4 <- r0.0()] && [b5 <- r0.0()] && [b1 <- add b1 i1] && [b2 <- add b2 i2] && [b3 <- add b3 i3]) || ([b5 <- r0.0()] && [b1 <- r0.0()] && [b2 <- add b2 i2] && [b3 <- add b3 i3] && [b4 <- add b4 i4]);

F (! (ge b1 r0.0() && ge b2 r0.0() && ge b3 r0.0() && ge b4 r0.0() && ge b5 r0.0()) || ! (lt b1 r1.4() || eq b1 r1.4()) && (lt b2 r1.4() || eq b2 r1.4()) && (lt b3 r1.4() || eq b3 r1.4()) && (lt b4 r1.4() || eq b4 r1.4()) && (lt b5 r1.4() || eq b5 r1.4()));
}
always assume {
  !(eq b1 r1.4() && eq b1 r0.0());
}

always assume {
  !(!(lt b3 r1.4()) && eq b3 r0.0());
}

always assume {
  !(!(lt b5 r1.4()) && eq b5 r0.0());
}

always assume {
  !(!(lt b2 r1.4()) && eq b2 r0.0());
}

always assume {
  !(!(lt b4 r1.4()) && eq b4 r0.0());
}

always assume {
  ge b5 r0.0() && ge b4 r0.0() && ge b3 r0.0() && ge b2 r0.0() && ge b1 r0.0() && eq (add (add (add (add i1 i2) i3) i4) i5) r1.0() && [ b5 <- (add b5 i5) ] && [ b4 <- (add b4 i4) ] && [ b3 <- (add b3 i3) ] && [ b2 <- (add b2 i2) ] && [ b1 <- (add b1 i1) ] -> X !(eq b5 r0.0() && eq b4 r0.0() && eq b3 r0.0() && eq b2 r0.0() && eq b1 r0.0());
}
