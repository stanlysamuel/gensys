//-- State: x, y, oldax, olday
//-- Inputs: ax, ay

assume {
  !(eq x oldax && eq y olday);
}

always guarantee {
  !(eq x oldax && eq y olday);

  [oldax <- ax];
  [olday <- ay];

  ([x <- add x i1()] && [y <- y]) ||
  ([x <- x] && [y <- add y i1()]) ||
  ([x <- sub x i1()] && [y <- y]) ||
  ([x <- x] && [y <- sub y i1()]);

  ([x <- add x i1()] && [y <- y]) -> (X !([x <- sub x i1()] && [y <- y]));
  ([x <- x] && [y <- add y i1()]) -> (X !([x <- x] && [y <- sub y i1()]));
  ([x <- sub x i1()] && [y <- y]) -> (X !([x <- add x i1()] && [y <- y]));
  ([x <- x] && [y <- sub y i1()]) -> (X !([x <- x] && [y <- add y i1()]));
}
