% No. 21 from Eric's paper (Industrial)
% pgarch-succeed/original.c in the benchmarks
/*
int wakend, NONDET, got_SIGHUP;
void init() { wakend = 1; got_SIGHUP = nondet(); }
int __phi() { return CAG(CAF(CAP(wakend == 1))); }

void body() {
  wakend = 1;
  while(1) {
    if (got_SIGHUP>0) {
      got_SIGHUP = 0;
      if (NONDET) break; 
    }
    if (wakend>0) { wakend = 0; }
    if (wakend<=0) {
      if (NONDET) wakend = 1;
    }
    if (NONDET) { break; }
  }
  while(1) { wakend = 1; } 
  return 0;
}
*/
% Here, next is supposed to be the same as in 49.qarmc,
% but ctlstar times-out: so next is simplified.
init(W,G,PC):=W=1,PC=1.
next(W,G,PC,Wp,Gp,PCp):=
    PC=1,PCp=3,G>=1,Wp=W,Gp=0;
    PC=1,PCp=3,G=<0,Wp=W,Gp=G;
    PC=1,PCp=6,G>=1,Wp=W,Gp=0;
    PC=3,PCp=4,W>=1,Wp=0,Gp=G;
    PC=3,PCp=4,W=<0,Wp=W,Gp=G;
    PC=4,PCp=6,W=<0,Wp=1,Gp=G;
    PC=4,PCp=6,Wp=W,Gp=G;
%    PC=4,PCp=1,Wp=W,Gp=G; % Pretend the break is not conditional
    PC=6,PCp=6,Wp=1,Gp=G.
dst(W,G,PC):=W=1.

% AG p1
phi0(W,G,PC):-init(W,G,PC).
phi0(Wp,Gp,PCp):-phi0(W,G,PC),next(W,G,PC,Wp,Gp,PCp).
p1(W,G,PC):-phi0(W,G,PC).

% p1 => AF w=1
phi1(W,G,PC):-p1(W,G,PC).
exists([Wp,Gp,PCp],next(W,G,PC,Wp,Gp,PCp)):-phi1(W,G,PC),\+dst(W,G,PC).
phi1(Wp,Gp,PCp):-phi1(W,G,PC),next(W,G,PC,Wp,Gp,PCp),\+dst(W,G,PC).
rank(W,G,PC,Wp,Gp,PCp):-phi1(W,G,PC),next(W,G,PC,Wp,Gp,PCp),\+dst(W,G,PC).
wf(rank/6).

query_naming(phi0(w,g,pc)).
query_naming(phi1(w,g,pc)).
query_naming(p1(w,g,pc)).
query_naming(rank(w,g,pc,'w\'','g\'','pc\'')).
query_naming(rank_p(w,g,pc,'w\'','g\'','pc\'')).

query_finite_sorts(phi0/3,[3]).
query_finite_sorts(p1/3,[3]).
query_finite_sorts(phi1/3,[3]).
query_finite_sorts(rank/6,[3,6]).
query_finite_sorts(rank_p/6,[3,6]).

% time ./ctlstar tests/ctlstar-Erics/Industrial/21-AGAF-succeed.qarmc -no-extra-insert-pred
% 'program is correct' after 2.8 sec (There is one difference between this model and
% Eric's original benchmark. Eric's benchmark fails on this AGAF property.)
% With '-case-split': 'program is correct' after 0.5 sec