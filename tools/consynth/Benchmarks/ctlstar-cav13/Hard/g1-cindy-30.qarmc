% finds a strategy for cindy (based on the round-robin template) to win the game with G not(overflow) objective for bucket capacity = 30.
init(B1, B2, B3, B4, B5, R) := B1=0, B2=0, B3=0, B4=0, B5=0, R=1.
stepmother(B1, B2, B3, B4, B5, R, B1p, B2p, B3p, B4p, B5p, Rp) :=
        B1p>=B1, B2p>=B2, B3p>=B3, B4p>=B4, B5p>=B5, B1p+B2p+B3p+B4p+B5p-B1-B2-B3-B4-B5=10, Rp=R.
overflow(B1, B2, B3, B4, B5, R) := B1>=31 ; B2>=31 ; B3>=31 ; B4>=31 ; B5>=31.

% cindy wins := EG ~overflow
inv(B1, B2, B3, B4, B5, R) :- init(B1, B2, B3, B4, B5, R).
exists([B1pp, B2pp, B3pp, B4pp, B5pp, Rpp],
       inv(B1pp, B2pp, B3pp, B4pp, B5pp, Rpp)
      ) :-
	inv(B1, B2, B3, B4, B5, R),
	stepmother(B1, B2, B3, B4, B5, R, B1p, B2p, B3p, B4p, B5p, Rp).
false :-
	inv(B1, B2, B3, B4, B5, R),
	stepmother(B1, B2, B3, B4, B5, R, B1p, B2p, B3p, B4p, B5p, Rp),
	overflow(B1p, B2p, B3p, B4p, B5p, Rp).

skolem_template(s3, [_B1, _B2, _B3, _B4, _B5, _R,
 		     B1, B2, B3, B4, B5, R,
 		     B1p, B2p, B3p, B4p, B5p, Rp],
  		true,
		( R>=1, R=<10 ),
  		(   R=1, Rp=T1, B1p=0,  B2p=0,  B3p=B3, B4p=B4, B5p=B5
		;   R=2, Rp=T2, B1p=B1, B2p=0,  B3p=0,  B4p=B4, B5p=B5
		;   R=3, Rp=T3, B1p=B1, B2p=B2, B3p=0,  B4p=0,  B5p=B5
		;   R=4, Rp=T4, B1p=B1, B2p=B2, B3p=B3, B4p=0,  B5p=0
		;   R=5, Rp=T5, B1p=0,  B2p=B2, B3p=B3, B4p=B4, B5p=0
                ;   R=6, Rp=T6, B1p=0,  B2p=B2, B3p=B3, B4p=B4, B5p=0
  		;   R=7, Rp=T7, B1p=0,  B2p=0,  B3p=B3, B4p=B4, B5p=B5
		;   R=8, Rp=T8, B1p=B1, B2p=0,  B3p=0,  B4p=B4, B5p=B5
		;   R=9, Rp=T9, B1p=B1, B2p=B2, B3p=0,  B4p=0,  B5p=B5
		;   R=10, Rp=T10, B1p=B1, B2p=B2, B3p=B3, B4p=0,  B5p=0
		),
		(T1>=1,T1=<10,T2>=1,T2=<10,T3>=1,T3=<10,T4>=1,T4=<10,T5>=1,T5=<10,T6>=1,T6=<10,T7>=1,T7=<10,T8>=1,T8=<10,T9>=1,T9=<10,T10>=1,T10=<10)
  	       ).

query_naming(inv(b1, b2, b3, b4, b5, r)).
query_naming(s3('_b1', '_b2', '_b3', '_b4', '_b5', '_r',
		b1, b2, b3, b4, b5, r, 'b1\'', 'b2\'', 'b3\'', 'b4\'', 'b5\'', 'r\'')).
query_finite_sorts(inv/6, [5]).
query_finite_sorts(s3/18, [5,10]).
