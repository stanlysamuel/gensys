% No. 25 from Eric's paper (Industrial)
/*
#include "../ctl.h"
// Property: c > 5 => F(resp > 5)

int c;
int servers ;
int resp;
int curr_serv;

int __rho_1_;
int __rho_2_;
unsigned int pc;
int __phi() { return CAND(CAP(c>5),CEG(CAP(resp<=5))); }

void init() {
  __rho_2_ = nondet();
  c = __rho_2_; assume(c>0);
  servers = 4;
  resp = 0;
  curr_serv = servers;
}

int body() {
  c = c;
  while(1) {
    if (!(curr_serv > 0)) break;
    __rho_1_ = nondet();
    if(__rho_1_>0) {
      c--; curr_serv--;
      resp++;
    } else {
      assume(c < curr_serv);
      curr_serv--;
    }
  }
  while(1) { dummy=dummy; } L_return: return 0;
}

int main() {}
*/
init(C,R,CS,PC):=C>=1,R=0,CS=4,PC=1.
next(C,R,CS,PC,Cp,Rp,CSp,PCp):=
    PC=1,CS=<0,Cp=C,Rp=R,CSp=CS,PCp=2;
    PC=1,CS>0,Cp=C,Rp=R,CSp=CS,PCp=3;
    PC=3,C>=CS,Cp=C-1,Rp=R+1,CSp=CS-1,PCp=1;
    PC=3,C<CS,Cp=C-1,Rp=R+1,CSp=CS-1,PCp=1;
    PC=3,C<CS,Cp=C,Rp=R,CSp=CS-1,PCp=1.
dst(C,R,CS,PC):=R=<5.
% init => (c>5 /\ EG r=<5)
exists([Cp,Rp,CSp,PCp],mid(Cp,Rp,CSp,PCp)) :- init(C,R,CS,PC).
skolem_template(s1, [C,R,CS,PC,Cp,Rp,CSp,PCp],
		true,
		true,
		( Rp=R,CSp=CS,PCp=PC,Cp=T ),
		( T=4 ; T=8; T=5 ; T=3 ; T=1 ) ).
C>5:-mid(C,R,CS,PC).
phi0(C,R,CS,PC):-mid(C,R,CS,PC).
exists([Cp,Rp,CSp,PCp],phi0(Cp,Rp,CSp,PCp)):-phi0(C,R,CS,PC),next(C,R,CS,PC,Cp,Rp,CSp,PCp).
dst(C,R,CS,PC):-phi0(C,R,CS,PC).
skolem_template(s7, [C,R,CS,PC,Cp,Rp,CSp,PCp],
  		true,
		(PC=1 ; PC=3 ),
		(
		  PC=1,CS=<0,Cp=C,Rp=R,CSp=CS,PCp=2;
		  PC=1,CS>0,Cp=C,Rp=R,CSp=CS,PCp=3;
		  PC=3,C>=CS,Cp=C-1,Rp=R+1,CSp=CS-1,PCp=1;
		  B>=1,PC=3,C<CS,Cp=C-1,Rp=R+1,CSp=CS-1,PCp=1;
		  B=<0,PC=3,C<CS,Cp=C,Rp=R,CSp=CS-1,PCp=1
  		),
		(B=0 ; B=1)
  	       ).

%query_naming(mid(c,r,cs,pc)).
query_naming(phi0(c,r,cs,pc)).
query_naming(s1(c,r,cs,pc,'c\'','r\'','cs\'','pc\'')).
query_naming(s7(c,r,cs,pc,'c\'','r\'','cs\'','pc\'')).

%query_finite_sorts(mid/4, [4]).
query_finite_sorts(phi0/4, [4]).
query_finite_sorts(s1/8, [4, 8]).
query_finite_sorts(s7/8, [4, 8]).

prog_rep([C,R,CS,PC,Cp,Rp,CSp,PCp],
	 (C>=1,R=0,CS=4,PC=1),
	 (
	   PC=1,CS=<0,Cp=C,Rp=R,CSp=CS,PCp=2;
	   PC=1,CS>0,Cp=C,Rp=R,CSp=CS,PCp=3;
	   PC=3,C>=CS,Cp=C-1,Rp=R+1,CSp=CS-1,PCp=1;
	   PC=3,C<CS,Cp=C-1,Rp=R+1,CSp=CS-1,PCp=1;
	   PC=3,C<CS,Cp=C,Rp=R,CSp=CS-1,PCp=1
	 )
	).
% time ./ctlstar tests/ctlstar-Erics/Industrial/54-pandEG-succeed.qarmc -no-extra-insert-pred -use-next-skolem
% 'program is correct' after 0.2 sec
% With '-case-split': 'program is correct' after 0.1 sec

