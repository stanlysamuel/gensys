% No. 27 from Eric's paper
% agimpefp-succeed/original.c in the benchmarks
/*
#include "../ctl.h"

// ************************************************************
// EXPECTED CHUTE:      __rho_1_ > 0
//
// EXPECTED RANKING:    x' < x  /\  x > 0
// ************************************************************

int x, p, check;
unsigned int pc;
int __phi() { return CAG( CIMP(CAP(check == 1), CEF( CAP(p > 0) ) )); }
int __rho_1_;
int __rho_2_;

void init() { p = 0; x = 5; start = 0; }

int body() {
  DOCHECK();
  while(1) {
    if(x < 0) { break; }
      DOCHECK();
    __rho_1_ = nondet();
    if (__rho_1_ > 0) {
      x = x - 1;
    }
  }
  p = 1;
  while(1) { if(dummy>0) break; } L_return: return 0;
}

int main() {}
*/
init(X,C,P,PC):=X=5,P=0,PC=1.
next(X,C,P,PC,Xp,Cp,Pp,PCp):=
    PC=1,Xp=X,Cp=1,Pp=P,PCp=2;
    PC=2,X>=0,Xp=X-1,Cp=1,Pp=P,PCp=2;
    PC=2,X>=0,Xp=X,Cp=1,Pp=P,PCp=2;
    PC=2,X<0,Xp=X,Cp=C,Pp=1,PCp=3.
dst(X,C,P,PC):=P>0.
% AG p1
phi0(X,C,P,PC):-init(X,C,P,PC).
phi0(Xp,Cp,Pp,PCp):-phi0(X,C,P,PC),next(X,C,P,PC,Xp,Cp,Pp,PCp).
p1(X,C,P,PC):-phi0(X,C,P,PC).
% p1 /\ c=1 => EF p>0
phi1(X,C,P,PC):-p1(X,C,P,PC),C=1.
exists([Xp,Cp,Pp,PCp],(rank(X,C,P,PC,Xp,Cp,Pp,PCp),phi1(Xp,Cp,Pp,PCp))):-phi1(X,C,P,PC),\+dst(X,C,P,PC),next(X,C,P,PC,Xp,Cp,Pp,PCp).
(PC=1;PC=2):-phi1(X,C,P,PC),\+dst(X,C,P,PC),next(X,C,P,PC,Xp,Cp,Pp,PCp). % domain clause***
wf(rank/8).
skolem_template(s9, [X,C,P,PC,Xp,Cp,Pp,PCp],
 		true,
 		(PC=1 ; B=0,PC=2,X>=0 ; B=1,PC=2,X>=0 ; PC=2,X<0),
 		(
		  PC=1,Xp=X,Cp=1,Pp=P,PCp=2;
		  B=0,PC=2,X>=0,Xp=X-1,Cp=1,Pp=P,PCp=2;
		  B=1,PC=2,X>=0,Xp=X,Cp=1,Pp=P,PCp=2;
		  PC=2,X<0,Xp=X,Cp=C,Pp=1,PCp=3
 		),
 		(B=0;B=1)
 	       ).

query_naming(init(x,c,p,pc)).
query_naming(phi0(x,c,p,pc)).
query_naming(phi1(x,c,p,pc)).
query_naming(p1(x,c,p,pc)).
query_naming(next(x,c,p,pc,'x\'','c\'','p\'','pc\'')).
query_naming(rank(x,c,p,pc,'x\'','c\'','p\'','pc\'')).
query_naming(rank_p(x,c,p,pc,'x\'','c\'','p\'','pc\'')).
query_naming(s9(x,c,p,pc,'x\'','c\'','p\'','pc\'')).

% time ./ctlstar tests/ctlstar-Erics/27-AGimpEF-succeed.qarmc -no-extra-insert-pred -use-next-skolem
% 'program correct' after 5.0 sec,
% with s9 = (pc=1,x'=x,c'=1,p'=p,pc'=2 ; pc=2,x>=0,x'=x-1,c'=c,p'=p,pc'=2 ; pc=2,x<0,x'=x,c'=c,p'=1,pc'=3)