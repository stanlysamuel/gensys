% No. 40 from Eric's paper
% neg-afegp-fail/original.c in the benchmarks
/*
#include "../ctl.h"

// ************************************************************
// EXPECTED CHUTE:      __rho_1_ > 0
//
// EXPECTED RANKING:    x' < x  /\  x > 0
// ************************************************************

int x, p, start;
unsigned int pc;
int __phi() { return CEG( CAF( CAP(p <= 0) ) ); }
int __rho_1_;
int __rho_2_;

void init() { p = 0; x = 5; }

int body() {
  while(1) {
    if(x < 0) { break; }
    x = x - 1;
  }
  p = 1;
  while(1) {
    __rho_1_ = nondet();
    if (__rho_1_ > 0) {
      p = 0;
    }
  }
  while(1) { if(dummy>0) break; } L_return: return 0;
}

int main() {}
*/
init(X,P,PC):=P=0,PC=1.
next(X,P,PC,Xp,Pp,PCp):=
    X>=0,PC=1,Xp=X-1,Pp=P,PCp=1;
    X<0,PC=1,Xp=X,Pp=1,PCp=2;
    PC=2,Xp=X,Pp=0,PCp=2;
    PC=2,Xp=X,Pp=P,PCp=2.
dst(X,P,PC):=P=<0.

% EG p1
phi0(X,P,PC):-init(X,P,PC).
exists([Xp,Pp,PCp],phi0(Xp,Pp,PCp)):-phi0(X,P,PC),next(X,P,PC,Xp,Pp,PCp).
p1(X,P,PC):-phi0(X,P,PC).

skolem_template(s3, [X,P,PC,Xp,Pp,PCp],
 		true,
		(PC=1 ; B=0,PC=2 ; B=1,PC=2),
 		(
		  X>=0,PC=1,Xp=X-1,Pp=P,PCp=1;
		  X<0,PC=1,Xp=X,Pp=1,PCp=2;
		  B=0,PC=2,Xp=X,Pp=0,PCp=2;
		  B=1,PC=2,Xp=X,Pp=P,PCp=2
		),
 		(B=0 ; B=1)
 	       ).
% p1 => AF p=<0
phi1(X,P,PC):-p1(X,P,PC).
exists([Xp,Pp,PCp],next(X,P,PC,Xp,Pp,PCp)):-phi1(X,P,PC),\+dst(X,P,PC).
phi1(Xp,Pp,PCp):-phi1(X,P,PC),next(X,P,PC,Xp,Pp,PCp),\+dst(X,P,PC).
rank(X,P,PC,Xp,Pp,PCp):-phi1(X,P,PC),next(X,P,PC,Xp,Pp,PCp),\+dst(X,P,PC).
wf(rank/6).

query_naming(init(x,p,pc)).
query_naming(phi0(x,p,pc)).
query_naming(phi1(x,p,pc)).
query_naming(p1(x,p,pc)).
query_naming(next(x,p,pc,'x\'','p\'','pc\'')).
query_naming(rank(x,p,pc,'x\'','p\'','pc\'')).
query_naming(rank_p(x,p,pc,'x\'','p\'','pc\'')).
query_naming(s3(x,p,pc,'x\'','p\'','pc\'')).

% time ./ctlstar tests/ctlstar-Erics/40-EGAF-fail.qarmc -no-extra-insert-pred -use-next-skolem
% CEX after 0.2 sec