% No. 42 from Eric's paper
% neg-afagp-fail/original.c in the benchmarks
/*
#include "../ctl.h"

// ************************************************************
// EXPECTED RANKING:    x' < x  /\  x > 0
//
// But should fail because AG(p) cannot be established.
// ************************************************************

int x, p, start;
unsigned int pc;
int __phi() { return CEG( CEF( CAP(p <= 0) ) ); }
int __rho_1_;
int __rho_2_;

void init() { p = 0; start = 0; }

int body() {
  start = 1;
  start = 0;
  while(1) { 
    if (!(x > 0)) break;
    __rho_1_ = nondet();
    if (__rho_1_ > 0) {
      x = x - 1; 
    } else {
      x = x - 2; 
    }
  }

  while(1) {
    __rho_2_ = nondet();
    if (__rho_2_ > 0)
      p = 1;
    else 
      p = 0;
  }
  while(1) { if(dummy>0) break; } L_return: return 0;
}

int main() {}
*/
init(X,P,PC):=P=0,PC=1.
next(X,P,PC,Xp,Pp,PCp):=
    X>0,PC=1,Xp=X-1,Pp=P,PCp=1;
    X>0,PC=1,Xp=X-2,Pp=P,PCp=1;
    X=<0,PC=1,Xp=X,Pp=P,PCp=2;
    PC=2,Xp=X,Pp=1,PCp=2;
    PC=2,Xp=X,Pp=0,PCp=2.
dst(X,P,PC):=P=<0.

% EG p1
phi0(X,P,PC):-init(X,P,PC).
exists([Xp,Pp,PCp],phi0(Xp,Pp,PCp)):-phi0(X,P,PC),next(X,P,PC,Xp,Pp,PCp).
p1(X,P,PC):-phi0(X,P,PC).

skolem_template(s3, [X,P,PC,Xp,Pp,PCp],
 		true,
 		(B=0,X>0,PC=1 ; B=1,X>0,PC=1 ; X=<0,PC=1 ; C=0,PC=2 ; C=1,PC=2),
 		(
 		  B=0,X>0,PC=1,Xp=X-1,Pp=P,PCp=1;
		  B=1,X>0,PC=1,Xp=X-2,Pp=P,PCp=1;
		  X=<0,PC=1,Xp=X,Pp=P,PCp=2;
		  C=0,PC=2,Xp=X,Pp=1,PCp=2;
		  C=1,PC=2,Xp=X,Pp=0,PCp=2
 		),
 		((B=0;B=1),(C=0;C=1))
 	       ).
% p1 => EF p=<0
phi1(X,P,PC):-p1(X,P,PC).
exists([Xp,Pp,PCp],(rank(X,P,PC,Xp,Pp,PCp),phi1(Xp,Pp,PCp))):-phi1(X,P,PC),\+dst(X,P,PC).
(PC=1;PC=2):-phi1(X,P,PC),\+dst(X,P,PC). % domain clause***
wf(rank/6).

skolem_template(s9, [X,P,PC,Xp,Pp,PCp],
 		true,
 		(B=0,X>0,PC=1 ; B=1,X>0,PC=1 ; X=<0,PC=1 ; C=0,PC=2 ; C=1,PC=2),
 		(
 		  B=0,X>0,PC=1,Xp=X-1,Pp=P,PCp=1;
		  B=1,X>0,PC=1,Xp=X-2,Pp=P,PCp=1;
		  X=<0,PC=1,Xp=X,Pp=P,PCp=2;
		  C=0,PC=2,Xp=X,Pp=1,PCp=2;
		  C=1,PC=2,Xp=X,Pp=0,PCp=2
 		),
 		((B=0;B=1),(C=0;C=1))
 	       ).

query_naming(init(x,p,pc)).
query_naming(phi0(x,p,pc)).
query_naming(phi1(x,p,pc)).
query_naming(p1(x,p,pc)).
query_naming(next(x,p,pc,'x\'','p\'','pc\'')).
query_naming(rank(x,p,pc,'x\'','p\'','pc\'')).
query_naming(rank_p(x,p,pc,'x\'','p\'','pc\'')).
query_naming(s3(x,p,pc,'x\'','p\'','pc\'')).
query_naming(s9(x,p,pc,'x\'','p\'','pc\'')).

% time ./ctlstar tests/ctlstar-Erics/43-EGEF-succeed.qarmc -no-extra-insert-pred -use-next-skolem
% 'program correct' after 2.8 sec **** Eric's comment??
% s3 = (x>0,pc=1,x'=x-1,p'=p,pc'=1 ; x=<0,pc=1,x'=x,p'=p,pc'=2 ; pc=2,x'=x,p'=2,pc'=2)
% s9 = (x>0,pc=1,x'=x-1,p'=p,pc'=1 ; x=<0,pc=1,x'=x,p'=p,pc'=2 ; pc=2,x'=x,p'=1,pc'=2)