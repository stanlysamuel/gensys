% No. 39 from Eric's paper
% neg-agegp-fail/original.c in the benchmarks
/*
#include "../ctl.h"

// ************************************************************
// EXPECTED CHUTE:      __rho_1_ > 0
// ************************************************************

int x, p;
unsigned int pc;
int __phi() { return CEF( CAF( CAP(p <= 0) ) ); }
int __rho_1_;
int __rho_2_;

void init() { p = 1; }

int body() {
  while(1) {
    __rho_1_ = nondet();
    if (__rho_1_ > 0) {
      p = 1;
    } else {
      p = 2;
    }
  }
  while(1) { if(dummy>0) break; } L_return: return 0;
}

int main() {}
*/
init(X,P,PC):=P=1,PC=1.
next(X,P,PC,Xp,Pp,PCp):=
    PC=1,Xp=X,Pp=1,PCp=1;
    PC=1,Xp=X,Pp=2,PCp=1.
dst(X,P,PC):=P=<0.
p1(X,P,PC):=P=<0. % true makes more sense
% EF p1
phi0(X,P,PC):-init(X,P,PC).
exists([Xp,Pp,PCp],(rank(X,P,PC,Xp,Pp,PCp),phi0(Xp,Pp,PCp))):-phi0(X,P,PC),\+p1(X,P,PC).
wf(rank/6).

skolem_template(s3, [X,P,PC,Xp,Pp,PCp],
 		true,
		(B=0,PC=1 ; B=1,PC=1),
 		(
		  B=0,PC=1,Xp=X,Pp=1,PCp=1;
		  B=1,PC=1,Xp=X,Pp=2,PCp=1
		),
 		(B=0 ; B=1)
 	       ).

% p1 => AF p=<0
phi1(X,P,PC):-p1(X,P,PC).
exists([Xp,Pp,PCp],next(X,P,PC,Xp,Pp,PCp)):-phi1(X,P,PC),\+dst(X,P,PC).
phi1(Xp,Pp,PCp):-phi1(X,P,PC),next(X,P,PC,Xp,Pp,PCp),\+dst(X,P,PC).
rank(X,P,PC,Xp,Pp,PCp):-phi1(X,P,PC),next(X,P,PC,Xp,Pp,PCp),\+dst(X,P,PC).
wf(rank/6).

query_naming(init(x,p,pc)).
query_naming(phi0(x,p,pc)).
query_naming(phi1(x,p,pc)).
query_naming(p1(x,p,pc)).
query_naming(next(x,p,pc,'x\'','p\'','pc\'')).
query_naming(rank(x,p,pc,'x\'','p\'','pc\'')).
query_naming(rank_p(x,p,pc,'x\'','p\'','pc\'')).
query_naming(s9(x,p,pc,'x\'','p\'','pc\'')).

% time ./ctlstar tests/ctlstar-Erics/39-EFAF-fail.qarmc -no-extra-insert-pred-use -next-skolem
% CEX after 0.1 sec, ***** p1 given!!