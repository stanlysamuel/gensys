/*
**Critical Sections Program: simplified one loop version **
  Encoding fairness: AG (AF thread1_excutes /\ AF thread2_executes)
Process A
1  flag1A = true;
2  turn1B = true;
3  while(flag1B && turn1B);
4  x = x && y;//CS
5  flag1A = false;
6  goto 1;
Process B
1  flag1B = true;
2  turn1B = false;
3  while(flag1A && !turn1B);
4  x = x && y; //CS
5  flag1B = false;
6  goto 1;

*/
init(F1A,F1B,T1B,K1,K2,PC1,PC2,A):=F1A=0,F1B=0,T1B=0,F2A=0,F2B=0,T2B=0,K1=2,K2=2,PC1=1,PC2=1,A=0.
next(F1A,F1B,T1B,K1,K2,PC1,PC2,A,F1Ap,F1Bp,T1Bp,K1p,K2p,PC1p,PC2p):=   
     % thread A
     K1=<K2,K1p=2,K2p=K2-1,PC1=1,F1Ap=1,F1Bp=F1B,T1Bp=T1B,PC1p=2,PC2p=PC2,A=1;
     K1p=K1,K2p=K2,PC1=2,F1Ap=F1A,F1Bp=F1B,T1Bp=1,PC1p=3,PC2p=PC2,A=1;
     K1=<K2,K1p=2,K2p=K2-1,PC1=3,F1B=1,T1B=1,F1Ap=F1A,F1Bp=F1B,T1Bp=T1B,PC1p=3,PC2p=PC2,A=1;
     K1p=K1,K2p=K2,PC1=3,(F1B=0;T1B=0),F1Ap=F1A,F1Bp=F1B,T1Bp=T1B,PC1p=4,PC2p=PC2,A=1;
     K1p=K1,K2p=K2,PC1=4,F1Ap=0,F1Bp=F1B,T1Bp=T1B,PC1p=5,PC2p=PC2,A=1;
     K1p=K1,K2p=K2,PC1=5,F1Ap=F1A,F1Bp=F1B,T1Bp=T1B,PC1p=1,PC2p=PC2,A=1;
     % thread B
     K2=<K1,K1p=K1-1,K2p=2,PC2=1,F1Ap=F1A,F1Bp=1,T1Bp=T1B,PC1p=PC1,PC2p=2,A=2;
     K1p=K1,K2p=K2,PC2=2,F1Ap=F1A,F1Bp=F1B,T1Bp=0,PC1p=PC1,PC2p=3,A=2;
     K2=<K1,K1p=K1-1,K2p=2,PC2=3,F1A=1,T1B=0,  F1Ap=F1A,F1Bp=F1B,T1Bp=T1B,PC1p=PC1,PC2p=3,A=2;
     K1p=K1,K2p=K2,PC2=3,(F1A=0;T1B=1),F1Ap=F1A,F1Bp=F1B,T1Bp=T1B,PC1p=PC1,PC2p=4,A=2;
     K1p=K1,K2p=K2,PC2=4,F1Ap=F1A,F1Bp=0,T1Bp=T1B,PC1p=PC1,PC2p=5,A=2;
     K1p=K1,K2p=K2,PC2=5,F1Ap=F1A,F1Bp=F1B,T1Bp=T1B,PC1p=PC1,PC2p=1,A=2.

% init => AG p
phi(F1A,F1B,T1B,K1,K2,PC1,PC2,A):-init(F1A,F1B,T1B,K1,K2,PC1,PC2,A).
phi(F1Ap,F1Bp,T1Bp,K1p,K2p,PC1p,PC2p,A):-
   	phi(F1A,F1B,T1B,K1,K2,PC1,PC2,_),next(F1A,F1B,T1B,K1,K2,PC1,PC2,A,F1Ap,F1Bp,T1Bp,K1p,K2p,PC1p,PC2p).
p(F1A,F1B,T1B,K1,K2,PC1,PC2,A):-phi(F1A,F1B,T1B,K1,K2,PC1,PC2,A).
% p => AF a=1
phi1(F1A,F1B,T1B,K1,K2,PC1,PC2,A):-p(F1A,F1B,T1B,K1,K2,PC1,PC2,A).
(PC1>=1,PC1=<5,PC2>=1,PC2=<5):-phi1(F1A,F1B,T1B,K1,K2,PC1,PC2,A),\+(A=1).
phi1(F1Ap,F1Bp,T1Bp,K1p,K2p,PC1p,PC2p,AA):-
  	phi1(F1A,F1B,T1B,K1,K2,PC1,PC2,A),
 	next(F1A,F1B,T1B,K1,K2,PC1,PC2,AA,F1Ap,F1Bp,T1Bp,K1p,K2p,PC1p,PC2p),
	\+(A=1).
rank1(F1A,F1B,T1B,K1,K2,PC1,PC2,A,F1Ap,F1Bp,T1Bp,K1p,K2p,PC1p,PC2p,AA):-
  	phi1(F1A,F1B,T1B,K1,K2,PC1,PC2,A),
 	next(F1A,F1B,T1B,K1,K2,PC1,PC2,AA,F1Ap,F1Bp,T1Bp,K1p,K2p,PC1p,PC2p),
 	\+(A=1).
wf(rank1/16).
% p => AF a=2
phi2(F1A,F1B,T1B,K1,K2,PC1,PC2,A):-p(F1A,F1B,T1B,K1,K2,PC1,PC2,A).
(PC1>=1,PC1=<5,PC2>=1,PC2=<5):-phi2(F1A,F1B,T1B,K1,K2,PC1,PC2,A),\+(A=2).
phi2(F1Ap,F1Bp,T1Bp,K1p,K2p,PC1p,PC2p,AA):-
   	phi2(F1A,F1B,T1B,K1,K2,PC1,PC2,A),
  	next(F1A,F1B,T1B,K1,K2,PC1,PC2,AA,F1Ap,F1Bp,T1Bp,K1p,K2p,PC1p,PC2p),
  	\+(A=2).
rank2(F1A,F1B,T1B,K1,K2,PC1,PC2,A,F1Ap,F1Bp,T1Bp,K1p,K2p,PC1p,PC2p,AA):-
   	phi2(F1A,F1B,T1B,K1,K2,PC1,PC2,A),
  	next(F1A,F1B,T1B,K1,K2,PC1,PC2,AA,F1Ap,F1Bp,T1Bp,K1p,K2p,PC1p,PC2p),
	\+(A=2).
wf(rank2/16).

query_finite_sorts(p,[6,7]).
query_finite_sorts(phi,[6,7]).
query_finite_sorts(phi1,[6,7]).
query_finite_sorts(phi2,[6,7]).
query_finite_sorts(rank1,[6,7,14,15]).
query_finite_sorts(rank1_p,[6,7,14,15]).
query_finite_sorts(rank2,[6,7,14,15]).
query_finite_sorts(rank2_p,[6,7,14,15]).
