ANTLR is actually made up of two main parts: the tool, used to generate the lexer and parser, and the runtime, needed to run them.

The tool will be needed just by you, the language engineer, while the runtime will be included in the final software created by you.

The tool is always the same no matter which language you are targeting: it is a Java program that you need on your development machine. It is used to generate the lexer and parser. While the runtime is different for every language and must be available both to the developer and to the user. It is needed to run the program.

The only requirement for the tool is that you have installed at least Java 1.7. To install the Java program, you need to download the latest version from the official site, which at the moment is:


# 1.sudo cp antlr-4.9.1-complete.jar /usr/local/lib/
# 2. and 3.
# add this to your .bash_profile
export CLASSPATH=".:/usr/local/lib/antlr-4.9.1-complete.jar:$CLASSPATH"
export PYTHONPATH=".:/usr/local/lib/antlr-4.9.1-complete.jar:$PYTHONPATH"
# simplify the use of the tool to generate lexer and parser
alias antlr4='java -Xmx500M -cp "/usr/local/lib/antlr-4.9.1-complete.jar:$CLASSPATH" org.antlr.v4.Tool'
# simplify the use of the tool to test the generated code
alias grun='java -Xmx500M -cp "/usr/local/lib/antlr-4.9.1-complete.jar:$CLASSPATH" org.antlr.v4.gui.TestRig'

Compile grammar:
    antlr4 -visitor GenSys.g4
Compile dependent libraries
    javac GenSys*.java

Two steps from here:
1. Run grammar directly
    grun GenSys root test
2. Run Visitors
    Create my own MyVisitor.java and driver MyApp.java and compile:
        javac MyApp.java
    Run:
        java MyApp
